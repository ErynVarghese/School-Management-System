@model SMS.Models.Student

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Student</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/css/bootstrap-datepicker.min.css">

    <style>
        body {
            background-color: #4B0082;
        }

        h2 {
            color: #4c0070;
        }

        .container {
            margin-top: 50px;
            max-width: 600px;
        }

        .card {
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background-color: #4c0070;
            border-color: #4c0070;
        }

            .btn-primary:hover {
                background-color: #320050;
            }


        .form-label {
            color: #4c0070;
        }

        .form-control {
            background-color: #E6E6FA; /* Light purple for input fields */
        }

        .form-select {
            background-color: #E6E6FA; /* Light purple for dropdowns */
            border: 1px solid #ced4da; /* Default border color */
        }

        .form-control:focus {
            border-color: #4c0070;
            box-shadow: 0 0 0 0.2rem rgba(76, 0, 112, 0.25);
            background-color: #E6E6FA;
        }

        .alert {
            margin-top: 20px;
        }

        .required:after {
            content: "*";
            color: red;
            margin-left: 5px;
        }
    </style>
</head>
<body>

    <div class="container">
        <div class="card">
            <div class="card-body">
                <h2 class="text-center">Add Student</h2>

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @using (Html.BeginForm("AddStud", "StudCRUD", FormMethod.Post, new { id = "studentForm" }))
                {

                    if (Model.StudentId > 0)
                    {

                        <div>
                             <strong style="color: #4c0070;">Student ID assigned is: </strong> @Model.StudentId
                        </div>
                    }
                    else if (ViewBag.MaxStudId != null)
                    {
                        <div>
                             <strong style="color: #4c0070;">Student ID will be assigned as: </strong> @ViewBag.MaxStudId
                        </div>
                    }


                    @Html.HiddenFor(model => model.StudentId)

                    <div class="mb-3">
                        @Html.LabelFor(model => model.StudentName, "Student Name", new { @class = "form-label required" })
                        @Html.TextBoxFor(model => model.StudentName, new { @class = "form-control", @pattern = "[A-Za-z ]*" , @id = "StudentName" })
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                        
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.DOB, "Date of Birth", new { @class = "form-label required" })
                        @Html.TextBoxFor(model => model.DOB, new { @class = "form-control datepicker", @id = "txtDate", @value = "" })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                 
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.ClassId, "Select Class", new { @class = "form-label required" })
                        @Html.DropDownListFor(model => model.ClassId, new SelectList(ViewBag.ClassList, "ClassId", "ClassName"),
                            "-- Select --", new { @class = "form-select", @id = "classDropdown" })
                        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                        
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.SectionId, "Select Section", new { @class = "form-label required" })
                        @Html.DropDownListFor(model => model.SectionId, new SelectList(ViewBag.SectionList, "SectionId", "SectionName"),
                            "-- Select --", new { @class = "form-select", @id = "sectionDropdown" })
                        @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                        
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.FatherName, "Father's Name", new { @class = "form-label required" })
                        @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control", @pattern = "[A-Za-z ]*", @id = "FatherName", @value = "" })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ContactNo, "Contact Number", new { @class = "form-label required" })
                        @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", type = "number", @id = "ContactNo" })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                      
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.StudentAddress, "Address", new { @class = "form-label required" })
                        @Html.TextBoxFor(model => model.StudentAddress, new { @class = "form-control", @id = "StudentAddress" })
                        @Html.ValidationMessageFor(model => model.StudentAddress, "", new { @class = "text-danger" })
           
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.StudentUsername, "Username", new { @class = "form-label required" })
                        @Html.TextBoxFor(model => model.StudentUsername, new { @class = "form-control", @id = "StudentUsername" })
                        @Html.ValidationMessageFor(model => model.StudentUsername, "", new { @class = "text-danger" })
                    
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.StudentPassword, "Password", new { @class = "form-label required" })
                        @Html.PasswordFor(model => model.StudentPassword, new { @class = "form-control", @id = "StudentPassword" })
                        @Html.ValidationMessageFor(model => model.StudentPassword, "", new { @class = "text-danger" })
          
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.StudentFee, "Class Fee", new { @class = "form-label " })
                        @Html.TextBoxFor(model => model.StudentFee, new { @class = "form-control", @readonly = "readonly", @id = "StudentFee" })
                        @Html.ValidationMessageFor(model => model.StudentFee, "", new { @class = "text-danger" })
                    
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Save Student</button>
                }
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js"></script>

    <script type="text/javascript">
    $(document).ready(function () {

        $('#sectionDropdown').attr('disabled',true);

    });


    $(document).ready(function () {
        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
        });



        $('#classDropdown').change(function () {
            $('#sectionDropdown').attr('disabled', false);
            var classId = $(this).val();
            if (classId) {
                $.ajax({
                    url: '@Url.Action("GetSectionsByClassId", "StudCRUD")',
                    type: 'GET',
                    data: { classId: classId },
                    success: function (data) {
                        $('#sectionDropdown').empty().append('<option value="">-- Select Section --</option>');
                        $.each(data, function (index, item) {
                            $('#sectionDropdown').append('<option value="' + item.SectionId + '">' + item.SectionName + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error loading sections.');
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetClassFeeById", "StudCRUD")',
                    type: 'GET',
                    data: { classId: classId },
                    success: function (feeData) {
                        $('#StudentFee').val(feeData);
                    },
                    error: function () {
                        alert('Error fetching fee.');
                    }
                });
            } else {
                $('#sectionDropdown').empty().append('<option value="">-- Select Section --</option>');
                $('#StudentFee').val('');
            }
        });
    });


    </script>

</body>
</html>
