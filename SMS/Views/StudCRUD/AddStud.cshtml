@model SMS.Models.Student

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add Student</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/css/bootstrap-datepicker.min.css">
</head>
<body>
    <div>

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">@TempData["Success"]</div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">@TempData["Error"]</div>
        }

        <h2> Add Student </h2>

        @using (Html.BeginForm("AddStud", "StudCRUD", FormMethod.Post, new { id = "studentForm" }))
        {
           

            <table class="table">

               <tr>
                    <td>
                        @Html.LabelFor(m => m.StudentId)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.StudentId, new { @class = "form-control",  type = "number",
                       @readonly = "readonly", @id = "StudentId"})

                        @Html.ValidationMessageFor(model => model.StudentId)
                    </td>
                </tr>


                 <tr>
                    <td>
                        @Html.LabelFor(model => model.StudentName)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.StudentName, new { @class = "form-control", type = "text", @pattern = "[A-Za-z ]*" })
                        @Html.ValidationMessageFor(model => model.StudentName)
                    </td>
                </tr>


             <tr>
                    <td>
                        @Html.LabelFor(model => model.DOB)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.DOB, new { @class = "form-control datepicker", @id = "txtDate", @value = "" })
                        @Html.ValidationMessageFor(model => model.DOB)
                    </td>
                </tr>

                

                <tr>
                    <td>
                        @Html.LabelFor(m => m.ClassId, "Select Class")
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.ClassId, new SelectList(ViewBag.ClassList, "ClassId", "ClassName"), 
                        "-- Select --", new { @class = "form-control", @id = "classDropdown" })
                        @Html.ValidationMessageFor(model => model.ClassId)
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(m => m.SectionId, "Select Section")
                    </td>
                    <td>
                       @Html.DropDownListFor(model => model.SectionId, new SelectList(ViewBag.SectionList, "SectionId", "SectionName"), 
                        "-- Select --", new { @class = "form-control", @id = "sectionDropdown" })
                        @Html.ValidationMessageFor(model => model.SectionId)
                    </td>
                </tr>


                <tr>
                    <td>
                        @Html.LabelFor(model => model.FatherName)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control", type = "text", @pattern = "[A-Za-z ]*" })
                        @Html.ValidationMessageFor(model => model.FatherName)
                    </td>
                </tr>

                 <tr>
                    <td>
                        @Html.LabelFor(model => model.ContactNo)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.ContactNo)

                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(m => m.StudentAddress)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.StudentAddress, new { @class = "form-control", type = "text", @pattern = "[A-Za-z  ]*" })
                        @Html.ValidationMessageFor(model => model.StudentAddress)

                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(m => m.StudentUsername)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.StudentUsername, new { @class = "form-control", type = "text", @pattern = "[A-Za-z  ]*" })
                        @Html.ValidationMessageFor(model => model.StudentUsername)

                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(m => m.StudentPassword)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.StudentPassword, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.StudentPassword)

                    </td>
                </tr>



                <tr>
                    <td>
                        @Html.LabelFor(m => m.StudentFee, "Class Fee")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.StudentFee, new { @class = "form-control", @readonly = "readonly" , @id = "StudentFee" })
                        @Html.ValidationMessageFor(model => model.StudentFee)
                    </td>
                </tr>

            </table>

            <button type="submit" class="btn btn-primary">Save</button>
        }

    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
            });

        $.ajax({
        url: '@Url.Action("GetNextStudentId", "StudCRUD")',
        type: 'GET',
        success: function (studentId) {
            $('#StudentId').val(studentId);
        },
        error: function () {
            alert('Error fetching StudentId.');
            }
        });


        $('#classDropdown').change(function () {
            var classId = $(this).val();
            if (classId) {
                
                $.ajax({
                    url: '@Url.Action("GetSectionsByClassId", "StudCRUD")',
                    type: 'GET',
                    data: { classId: classId },
                    success: function (data) {
                        
                        $('#sectionDropdown').empty();
                        $.each(data, function (index, item) {
                            $('#sectionDropdown').append('<option value="' + item.SectionId + '">' + item.SectionName + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error loading sections.');
                    }
                });

                
                $.ajax({
                    url: '@Url.Action("GetClassFeeById", "StudCRUD")', 
                    type: 'GET',
                    data: { classId: classId },
                    success: function (feeData) {
                        
                        $('#StudentFee').val(feeData); 
                    },
                    error: function () {
                        alert('Error fetching fee.');
                    }
                });

            } else {
              
                $('#sectionDropdown').empty();
                $('#sectionDropdown').append('<option>Select Section</option>');

                
                $('#StudentFee').val('');
            }
        });
    });
    </script>

</body>
</html>
